package test

import (
	decoder "github.com/kdt-wolf/moex-fast/internal/decoder/future"
	"log"
	"testing"
)

func TestBytesToSecDef3(t *testing.T) {
	var b = []byte{
		8, 0, 0, 0, 192, 145, 136, 35, 113, 28, 68, 66, 81, 37, 187, 212, 65, 75, 90, 48, 177, 208, 164, 209, 140, 209, 142, 209, 135, 208, 181, 209, 128, 209, 129, 208, 189, 209, 139, 208, 185, 32, 208, 186, 208, 190, 208, 189, 209, 130, 209, 128, 208, 176, 208, 186, 209, 130, 32, 65, 70, 75, 83, 45, 49, 50, 46, 50, 48, 47, 98, 146, 65, 70, 75, 83, 45, 49, 50, 46, 50, 48, 56, 0, 6, 88, 88, 88, 88, 216, 128, 132, 129, 146, 82, 85, 66, 70, 130, 80, 146, 128, 133, 70, 85, 84, 45, 66, 79, 79, 75, 45, 49, 130, 130, 70, 85, 84, 45, 66, 79, 79, 75, 45, 53, 134, 131, 70, 85, 84, 45, 66, 79, 79, 75, 45, 50, 48, 149, 131, 70, 85, 84, 45, 66, 79, 79, 75, 45, 53, 48, 179, 131, 70, 85, 84, 45, 84, 82, 65, 68, 69, 83, 128, 128, 130, 65, 70, 75, 83, 128, 128, 59, 7, 105, 119, 9, 128, 59, 7, 96, 1, 69, 128, 59, 6, 13, 160, 59, 6, 13, 160, 62, 1, 35, 178, 62, 1, 35, 178, 128, 0, 128, 128, 128, 128, 128, 0, 131, 135, 9, 80, 126, 129, 35, 113, 28, 98, 97, 105, 49, 128, 133, 9, 80, 121, 155, 35, 113, 10, 115, 55, 103, 57, 128, 9, 80, 126, 130, 100, 17, 49, 129, 0, 244, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	}
	message, _ := decoder.Decode(b)
	definition := message.SecurityDefinition
	log.Printf("%+v", definition)
}

func TestBytesToSecDef4(t *testing.T) {
	var b = []byte{
		42, 0, 0, 0, 192, 149, 170, 35, 115, 34, 71, 82, 44, 88, 197, 176, 71, 90, 77, 177, 176, 208, 164, 209, 140, 209, 142, 209, 135, 208, 181, 209, 128, 209, 129, 208, 189, 209, 139, 208, 185, 32, 208, 186, 208, 190, 208, 189, 209, 130, 209, 128, 208, 176, 208, 186, 209, 130, 32, 71, 65, 90, 82, 45, 54, 46, 50, 49, 47, 98, 167, 71, 65, 90, 82, 45, 54, 46, 50, 177, 184, 128, 70, 88, 88, 88, 88, 216, 128, 131, 129, 146, 82, 85, 194, 198, 134, 80, 191, 128, 133, 70, 85, 84, 45, 66, 79, 79, 75, 45, 177, 130, 130, 70, 85, 84, 45, 66, 79, 79, 75, 45, 181, 134, 131, 70, 85, 84, 45, 66, 79, 79, 75, 45, 50, 176, 149, 131, 70, 85, 84, 45, 66, 79, 79, 75, 45, 53, 176, 179, 131, 70, 85, 84, 45, 84, 82, 65, 68, 69, 211, 128, 128, 130, 71, 65, 90, 210, 128, 128, 251, 9, 11, 86, 25, 128, 251, 7, 92, 74, 11, 128, 251, 6, 13, 160, 251, 6, 13, 160, 254, 21, 120, 204, 254, 22, 114, 150, 128, 128, 128, 128, 128, 128, 128, 128, 131, 135, 9, 81, 71, 185, 35, 115, 46, 44, 63, 14, 17, 128, 133, 9, 80, 121, 160, 35, 113, 11, 6, 7, 127, 29, 128, 9, 81, 71, 186, 100, 17, 49, 129, 0, 244, 251, 6, 13, 160, 251, 8, 52, 16, 18, 128, 0, 0, 0, 0, 0, 0, 0,
	}
	message, _ := decoder.Decode(b)
	definition := message.SecurityDefinition
	log.Printf("%+v", definition)
}

func TestBytesToSecDef5(t *testing.T) {
	var b = []byte{
		38, 0, 0, 0, 192, 145, 166, 35, 113, 28, 68, 90, 74, 12, 222, 212, 83, 86, 90, 176, 177, 208, 164, 209, 140, 209, 142, 209, 135, 208, 181, 209, 128, 209, 129, 208, 189, 209, 139, 208, 185, 32, 208, 186, 208, 190, 208, 189, 209, 130, 209, 128, 208, 176, 208, 186, 209, 130, 32, 83, 73, 76, 86, 45, 49, 50, 46, 50, 48, 45, 122, 168, 83, 73, 76, 86, 45, 49, 50, 46, 50, 176, 184, 128, 70, 88, 88, 88, 88, 216, 128, 130, 129, 146, 85, 83, 196, 198, 134, 80, 147, 128, 133, 70, 85, 84, 45, 66, 79, 79, 75, 45, 177, 130, 130, 70, 85, 84, 45, 66, 79, 79, 75, 45, 181, 134, 131, 70, 85, 84, 45, 66, 79, 79, 75, 45, 50, 176, 149, 131, 70, 85, 84, 45, 66, 79, 79, 75, 45, 53, 176, 179, 131, 70, 85, 84, 45, 84, 82, 65, 68, 69, 211, 128, 128, 130, 83, 73, 76, 214, 128, 128, 251, 1, 29, 83, 216, 251, 1, 14, 50, 200, 251, 7, 232, 251, 3, 62, 87, 198, 254, 0, 123, 2, 158, 254, 0, 123, 43, 183, 128, 128, 128, 128, 128, 128, 128, 128, 131, 135, 9, 80, 126, 129, 35, 113, 28, 98, 97, 105, 49, 128, 133, 9, 80, 122, 131, 35, 113, 13, 118, 110, 111, 89, 128, 9, 80, 126, 129, 100, 17, 49, 129, 0, 244, 0, 0, 0, 0, 0, 0, 0,
	}
	message, _ := decoder.Decode(b)
	definition := message.SecurityDefinition
	log.Printf("%+v", definition)
}
